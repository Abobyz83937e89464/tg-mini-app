// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const ADMIN_ID = 8049083248;
const USER_PASSWORD = "morpa";
const DRIVE_FILES = [
    {"name": "boo.wf_100mln_0.csv", "url": "https://drive.google.com/uc?export=download&id=1U6C-SqeNWv3ylYujFBTZS0yY1uWk2BQk"},
    {"name": "Clients.csv", "url": "https://drive.google.com/uc?export=download&id=1EicBhkkAOk_s27-_tHZnbAv8Ik_56TR3"},
    {"name": "emails1.csv", "url": "https://drive.google.com/uc?export=download&id=1LH8xf06jH7GnOGCC92Ld7e5hJpN4ZxAV"},
    {"name": "enter_data_copy.sql", "url": "https://drive.google.com/uc?export=download&id=1IDEEjS3gE4TsqJ-_bdYPAfttS7Slbyq2"},
    {"name": "Fbi.gov.csv", "url": "https://drive.google.com/uc?export=download&id=1leVbmb7ZHOw5f9NBLEImu2Ob2UPLiKlk"},
    {"name": "GetContact_2020_19kk.csv", "url": "https://drive.google.com/uc?export=download&id=1f0Ns-HJfZQyn-5SBj74QTUwBvHW9n6yh"},
    {"name": "getcontact.com numbuster.com.csv", "url": "https://drive.google.com/uc?export=download&id=1czMpRLgFXQo8xTs6FDZVL7_jFF99Xpar"},
    {"name": "getcontact.csv", "url": "https://drive.google.com/uc?export=download&id=1gSCz1BnD1M19hZpQow_-3s8CnVhm8RxQ"},
    {"name": "hlbd_form_results.sql", "url": "https://drive.google.com/uc?export=download&id=1hCEPyENccz0m4qKlvrMJVCj_Y0IcH9j_"},
    {"name": "itlyceum_felix.csv", "url": "https://drive.google.com/uc?export=download&id=1oBzfT6JOxJkYajCBA9iXvg6Jc_KSZwfK"},
    {"name": "kztg.csv", "url": "https://drive.google.com/uc?export=download&id=1SlTbBKJ-BDoEpyyL0L46c45Bu142H4pM"},
    {"name": "Phone Pay -1.xlsx", "url": "https://drive.google.com/uc?export=download&id=1k3R1TxqoeTMvguYn8pjCICNFcU7mup2l"},
    {"name": "Phone Pay -2.xlsx", "url": "https://drive.google.com/uc?export=download&id=1k3R1TxqoeTMvguYn8pjCICNFcU7mup2l"},
    {"name": "Phone Pay.xlsx", "url": "https://drive.google.com/uc?export=download&id=1vMylLEXUECkL5rvXVgeKejDA_RiFyfOt"},
    {"name": "phone.csv", "url": "https://drive.google.com/uc?export=download&id=1_4fy0XswInx6Ke8JzI0gKuo5jzcG4LYm"},
    {"name": "–ê–¥—Ä–µ—Å –∫–ª–∏–µ–Ω—Ç–æ–≤_9.3k.csv", "url": "https://drive.google.com/uc?export=download&id=1nZIuSMThLynwXkrJj6jWgos-NwvsSrps"}
];

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let tg = window.Telegram.WebApp;
let user = tg.initDataUnsafe.user;
let searchesLeft = 3;
let isAdmin = false;
let userStorage = JSON.parse(localStorage.getItem('userStorage')) || {};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Mini App
function initTelegramApp() {
    if (typeof tg !== 'undefined') {
        tg.expand();
        tg.ready();
        checkAdminRights();
    } else {
        console.log('Telegram WebApp –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω, –∑–∞–ø—É—Å–∫ –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
        // –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        document.getElementById('password').value = USER_PASSWORD;
    }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –ø—Ä–∞–≤
function checkAdminRights() {
    if (user && user.id === ADMIN_ID) {
        isAdmin = true;
        searchesLeft = 9999;
        console.log('üëë –ê–¥–º–∏–Ω—Å–∫–∏–π –¥–æ—Å—Ç—É–ø –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
    }
    return isAdmin;
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
function saveUserData() {
    localStorage.setItem('userStorage', JSON.stringify(userStorage));
}

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
function showMainMenu() {
    hideAllSections();
    
    if (isAdmin) {
        document.getElementById('adminPanel').classList.remove('hidden');
        loadAdminStats();
    } else {
        document.getElementById('search').classList.remove('hidden');
        updateSearchesCounter();
    }
}

function hideAllSections() {
    const sections = ['auth', 'search', 'payment', 'adminPanel'];
    sections.forEach(id => document.getElementById(id).classList.add('hidden'));
}

// –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
function checkPassword() {
    let password = document.getElementById('password').value;
    if (password === USER_PASSWORD) {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (user && user.id) {
            if (!userStorage[user.id]) {
                userStorage[user.id] = {
                    searches_left: isAdmin ? 9999 : 3,
                    unlimited: isAdmin,
                    last_active: Date.now(),
                    username: user.username || 'unknown'
                };
            }
            saveUserData();
        }
        showMainMenu();
    } else {
        alert('‚ùå –ù–ï–í–ï–†–ù–´–ô –ü–ê–†–û–õ–¨!');
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞
function updateSearchesCounter() {
    const counter = document.getElementById('searchesLeft');
    if (isAdmin) {
        counter.textContent = '‚àû';
        counter.style.color = '#00aa00';
    } else {
        counter.textContent = searchesLeft;
        counter.style.color = searchesLeft > 0 ? '#2481cc' : '#ff4444';
    }
}

// –ü–û–ò–°–ö –ü–û –ë–ê–ó–ê–ú –î–ê–ù–ù–´–•
async function searchData() {
    let query = document.getElementById('query').value.trim();
    
    if (query.length < 2) {
        alert('‚ùå –ú–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞');
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–æ–≤
    if (!isAdmin && searchesLeft <= 0) {
        document.getElementById('search').classList.add('hidden');
        document.getElementById('payment').classList.remove('hidden');
        return;
    }
    
    // –°–ø–∏—Å–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞
    if (!isAdmin) {
        searchesLeft--;
        updateSearchesCounter();
    }
    
    let resultsDiv = document.getElementById('results');
    resultsDiv.innerHTML = '<div class="result">üîç –°–∫–∞–Ω–∏—Ä—É—é 16 –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö... (1-2 –º–∏–Ω—É—Ç—ã)</div>';
    
    try {
        const allResults = [];
        let completed = 0;
        
        // –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –≤—Å–µ–º –±–∞–∑–∞–º
        for (let file of DRIVE_FILES) {
            try {
                const response = await fetch(file.url);
                if (response.ok) {
                    const content = await response.text();
                    const fileResults = searchInContent(content, query, file.name);
                    allResults.push(...fileResults);
                }
            } catch (error) {
                console.error(`–û—à–∏–±–∫–∞ –≤ –±–∞–∑–µ ${file.name}:`, error);
            }
            
            completed++;
            resultsDiv.innerHTML = `<div class="result">üîç –°–∫–∞–Ω–∏—Ä—É—é... (${completed}/${DRIVE_FILES.length} –±–∞–∑)</div>`;
        }
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        displaySearchResults(allResults, query);
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞:', error);
        resultsDiv.innerHTML = '<div class="result">‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ</div>';
    }
}

// –ü–æ–∏—Å–∫ –≤ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º —Ñ–∞–π–ª–∞
function searchInContent(content, query, fileName) {
    const results = [];
    const lines = content.split('\n');
    
    for (let line of lines) {
        if (line.toLowerCase().includes(query.toLowerCase())) {
            // –¢–µ–ª–µ—Ñ–æ–Ω—ã
            const phones = line.match(/\d{7,15}/g) || [];
            // –ò–º–µ–Ω–∞ (–∫–∏—Ä–∏–ª–ª–∏—Ü–∞)
            const names = line.match(/[–ê-–Ø–Å][–∞-—è—ë]+\s+[–ê-–Ø–Å][–∞-—è—ë]+/g) || [];
            // Email
            const emails = line.match(/\S+@\S+\.\S+/g) || [];
            
            phones.forEach(phone => results.push(`üìû ${phone}`));
            names.forEach(name => results.push(`üë§ ${name}`));
            emails.forEach(email => results.push(`üìß ${email}`));
        }
    }
    
    return results;
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
function displaySearchResults(results, query) {
    const resultsDiv = document.getElementById('results');
    const uniqueResults = [...new Set(results)];
    
    if (uniqueResults.length > 0) {
        let html = `<div class="result" style="background: #e8f5e8;">
            ‚úÖ –ù–ê–ô–î–ï–ù–û: "${query}"<br>
            üìä –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: ${uniqueResults.length}
        </div>`;
        
        uniqueResults.slice(0, 30).forEach(result => {
            html += `<div class="result">${result}</div>`;
        });
        
        if (uniqueResults.length > 30) {
            html += `<div class="result">... –∏ –µ—â–µ ${uniqueResults.length - 30} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤</div>`;
        }
        
        resultsDiv.innerHTML = html;
    } else {
        resultsDiv.innerHTML = `<div class="result">‚ùå –ü–æ –∑–∞–ø—Ä–æ—Å—É "${query}" –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</div>`;
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–æ–≤ –ø–æ—Å–ª–µ –ø–æ–∏—Å–∫–∞
    if (!isAdmin && searchesLeft <= 0) {
        setTimeout(() => {
            document.getElementById('search').classList.add('hidden');
            document.getElementById('payment').classList.remove('hidden');
        }, 1000);
    }
}

// –ê–î–ú–ò–ù –ü–ê–ù–ï–õ–¨
function loadAdminStats() {
    const totalUsers = Object.keys(userStorage).length;
    const activeUsers = Object.values(userStorage).filter(u => u.searches_left > 0).length;
    
    document.getElementById('adminStats').innerHTML = `
        <div class="result">
            <strong>üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´</strong><br>
            üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <strong>${totalUsers}</strong><br>
            üî• –ê–∫—Ç–∏–≤–Ω—ã—Ö: <strong>${activeUsers}</strong><br>
            üíé –í–∞—à —Å—Ç–∞—Ç—É—Å: <strong style="color: #00aa00;">–ë–ï–ó–õ–ò–ú–ò–¢ ‚àû</strong>
        </div>
    `;
}

function showAdminSection(section) {
    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Å–µ–∫—Ü–∏–∏
    const sections = ['Stats', 'Users', 'AddSearches', 'Broadcast', 'Sniffer'];
    sections.forEach(sec => {
        const element = document.getElementById(`admin${sec}`);
        if (element) element.classList.add('hidden');
    });
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é
    const targetElement = document.getElementById(`admin${section}`);
    if (targetElement) targetElement.classList.remove('hidden');
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    if (section === 'Users') loadUserList();
    if (section === 'AddSearches') initAddSearches();
    if (section === 'Broadcast') initBroadcast();
    if (section === 'Sniffer') initSniffer();
}

function loadUserList() {
    let html = '<div class="result"><strong>üë• –ü–û–°–õ–ï–î–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò:</strong><br>';
    
    if (Object.keys(userStorage).length === 0) {
        html += 'üì≠ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞ –Ω–µ—Ç';
    } else {
        const users = Object.entries(userStorage)
            .sort((a, b) => b[1].last_active - a[1].last_active)
            .slice(0, 8);
        
        users.forEach(([userId, userData]) => {
            const searches = userData.unlimited ? '‚àû' : userData.searches_left;
            const status = userData.unlimited ? 'üü¢ –ë–ï–ó–õ–ò–ú–ò–¢' : (userData.searches_left > 0 ? 'üü° –ê–ö–¢–ò–í–ï–ù' : 'üî¥ –ù–ï–¢ –ó–ê–ü–†–û–°–û–í');
            html += `
                üë§ ID: <strong>${userId}</strong><br>
                üíé –ó–∞–ø—Ä–æ—Å–æ–≤: <strong>${searches}</strong><br>
                üì± ${status}<br>
                ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ<br>
            `;
        });
    }
    
    html += '</div>';
    document.getElementById('adminUsers').innerHTML = html;
}

function initAddSearches() {
    document.getElementById('adminAddSearches').innerHTML = `
        <div class="result">
            <strong>üéÅ –í–´–î–ê–ß–ê –ó–ê–ü–†–û–°–û–í</strong><br><br>
            
            <input type="text" id="addUserId" placeholder="ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è">
            <select id="addSearchesType">
                <option value="10">10 –∑–∞–ø—Ä–æ—Å–æ–≤</option>
                <option value="25">25 –∑–∞–ø—Ä–æ—Å–æ–≤</option>
                <option value="50">50 –∑–∞–ø—Ä–æ—Å–æ–≤</option>
                <option value="100">100 –∑–∞–ø—Ä–æ—Å–æ–≤</option>
                <option value="unlimited">–ë–ï–ó–õ–ò–ú–ò–¢</option>
            </select>
            
            <button onclick="addSearchesToUser()" style="background: #00aa00;">
                üíé –í–´–î–ê–¢–¨ –ó–ê–ü–†–û–°–´
            </button>
            
            <div id="addSearchesResult"></div>
        </div>
    `;
}

function addSearchesToUser() {
    const userId = document.getElementById('addUserId').value.trim();
    const type = document.getElementById('addSearchesType').value;
    const resultDiv = document.getElementById('addSearchesResult');
    
    if (!userId) {
        resultDiv.innerHTML = '<div style="color: red;">‚ùå –í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</div>';
        return;
    }
    
    if (!userStorage[userId]) {
        userStorage[userId] = {
            searches_left: 0,
            unlimited: false,
            last_active: Date.now(),
            username: 'added_by_admin'
        };
    }
    
    if (type === 'unlimited') {
        userStorage[userId].unlimited = true;
        userStorage[userId].searches_left = 9999;
        resultDiv.innerHTML = `<div style="color: green;">‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId} –≤—ã–¥–∞–Ω <strong>–ë–ï–ó–õ–ò–ú–ò–¢</strong></div>`;
    } else {
        const addAmount = parseInt(type);
        userStorage[userId].searches_left += addAmount;
        userStorage[userId].unlimited = false;
        resultDiv.innerHTML = `<div style="color: green;">‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId} –¥–æ–±–∞–≤–ª–µ–Ω–æ <strong>${addAmount}</strong> –∑–∞–ø—Ä–æ—Å–æ–≤</div>`;
    }
    
    userStorage[userId].last_active = Date.now();
    saveUserData();
    
    setTimeout(() => loadUserList(), 500);
}

function initBroadcast() {
    document.getElementById('adminBroadcast').innerHTML = `
        <div class="result">
            <strong>üì¢ –†–ê–°–°–´–õ–ö–ê –°–û–û–ë–©–ï–ù–ò–ô</strong><br><br>
            
            <textarea id="broadcastMessage" placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏..."></textarea>
            
            <button onclick="sendBroadcast()" style="background: #ff4444;">
                üì¢ –û–¢–ü–†–ê–í–ò–¢–¨ –í–°–ï–ú
            </button>
            
            <div id="broadcastResult"></div>
        </div>
    `;
}

function sendBroadcast() {
    const message = document.getElementById('broadcastMessage').value.trim();
    const resultDiv = document.getElementById('broadcastResult');
    
    if (!message) {
        resultDiv.innerHTML = '<div style="color: red;">‚ùå –í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</div>';
        return;
    }
    
    const users = Object.keys(userStorage);
    if (users.length === 0) {
        resultDiv.innerHTML = '<div style="color: orange;">‚ö†Ô∏è –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏</div>';
        return;
    }
    
    resultDiv.innerHTML = `<div style="color: blue;">üîÑ –†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–∞—Ç–∞... 0/${users.length}</div>`;
    
    // –≠–º—É–ª—è—Ü–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏
    let sent = 0;
    const interval = setInterval(() => {
        sent++;
        resultDiv.innerHTML = `<div style="color: blue;">üîÑ –†–∞—Å—Å—ã–ª–∫–∞... ${sent}/${users.length}</div>`;
        
        if (sent >= users.length) {
            clearInterval(interval);
            resultDiv.innerHTML = `<div style="color: green;">‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${sent}</div>`;
        }
    }, 100);
}

function initSniffer() {
    document.getElementById('adminSniffer').innerHTML = `
        <div class="result">
            <strong>üéØ –°–ù–ò–§–ï–† –¢–†–ê–§–ò–ö–ê</strong><br><br>
            
            <div style="background: #1a1a1a; color: #00ff00; padding: 10px; border-radius: 5px; font-family: monospace; font-size: 12px;">
                üöÄ –ú–æ–¥—É–ª—å —Å–Ω–∏—Ñ–µ—Ä–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω<br>
                üì° –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–µ—Ç–µ–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏...<br>
                üåê –ê–Ω–∞–ª–∏–∑ DNS –∑–∞–ø—Ä–æ—Å–æ–≤...<br>
                üîí –ü–µ—Ä–µ—Ö–≤–∞—Ç HTTP/HTTPS —Ç—Ä–∞—Ñ–∏–∫–∞...<br>
                üíæ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–∫–µ—Ç–æ–≤...<br>
                ‚ö° –ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ
            </div>
            
            <button onclick="startSniffer()" style="background: #00aa00; margin: 10px 0;">
                üöÄ –ó–ê–ü–£–°–¢–ò–¢–¨ –°–ù–ò–§–ï–†
            </button>
            
            <button onclick="stopSniffer()" style="background: #ff4444;">
                ‚èπÔ∏è –û–°–¢–ê–ù–û–í–ò–¢–¨
            </button>
            
            <div id="snifferOutput" style="margin-top: 10px;"></div>
        </div>
    `;
}

function startSniffer() {
    const output = document.getElementById('snifferOutput');
    output.innerHTML = '<div class="result">üéØ –°–Ω–∏—Ñ–µ—Ä –∑–∞–ø—É—â–µ–Ω...</div>';
    
    // –≠–º—É–ª—è—Ü–∏—è —Ä–∞–±–æ—Ç—ã —Å–Ω–∏—Ñ–µ—Ä–∞
    const messages = [
        'üì° –ü–µ—Ä–µ—Ö–≤–∞—á–µ–Ω DNS –∑–∞–ø—Ä–æ—Å: google.com',
        'üåê HTTP –∑–∞–ø—Ä–æ—Å –∫: api.telegram.org',
        'üîí HTTPS —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ: bank.ru',
        'üìä –ü–∞–∫–µ—Ç –¥–∞–Ω–Ω—ã—Ö: 512 bytes',
        'üñ•Ô∏è User-Agent: Chrome/120.0.0.0',
        'üìç IP –∞–¥—Ä–µ—Å: 192.168.1.1'
    ];
    
    let index = 0;
    const interval = setInterval(() => {
        if (index < messages.length) {
            output.innerHTML += `<div class="result" style="font-size: 11px;">${messages[index]}</div>`;
            index++;
        } else {
            clearInterval(interval);
        }
    }, 1500);
    
    window.snifferInterval = interval;
}

function stopSniffer() {
    if (window.snifferInterval) {
        clearInterval(window.snifferInterval);
    }
    document.getElementById('snifferOutput').innerHTML = '<div class="result">‚èπÔ∏è –°–Ω–∏—Ñ–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω</div>';
}

// –ü–ª–∞—Ç–µ–∂–∏
function buyRequests(amount) {
    if (isAdmin) {
        alert('üíé –£ –≤–∞—Å –±–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø!');
        return;
    }
    
    // –≠–º—É–ª—è—Ü–∏—è –ø–ª–∞—Ç–µ–∂–∞
    searchesLeft += amount;
    updateSearchesCounter();
    
    document.getElementById('payment').classList.add('hidden');
    document.getElementById('search').classList.remove('hidden');
    
    alert(`‚úÖ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –î–æ–±–∞–≤–ª–µ–Ω–æ ${amount} –∑–∞–ø—Ä–æ—Å–æ–≤`);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', function() {
    initTelegramApp();
    
    // –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –¥–ª—è –∞–¥–º–∏–Ω–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    if (isAdmin) {
        document.getElementById('password').value = USER_PASSWORD;
    }
});
