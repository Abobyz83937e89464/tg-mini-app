// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const ADMIN_ID = 8049083248;
const USER_PASSWORD = "morpa";
const DRIVE_FILES = [
    {"name": "boo.wf_100mln_0.csv", "url": "https://drive.google.com/uc?export=download&id=1U6C-SqeNWv3ylYujFBTZS0yY1uWk2BQk"},
    {"name": "Clients.csv", "url": "https://drive.google.com/uc?export=download&id=1EicBhkkAOk_s27-_tHZnbAv8Ik_56TR3"},
    {"name": "emails1.csv", "url": "https://drive.google.com/uc?export=download&id=1LH8xf06jH7GnOGCC92Ld7e5hJpN4ZxAV"},
    {"name": "enter_data_copy.sql", "url": "https://drive.google.com/uc?export=download&id=1IDEEjS3gE4TsqJ-_bdYPAfttS7Slbyq2"},
    {"name": "Fbi.gov.csv", "url": "https://drive.google.com/uc?export=download&id=1leVbmb7ZHOw5f9NBLEImu2Ob2UPLiKlk"},
    {"name": "GetContact_2020_19kk.csv", "url": "https://drive.google.com/uc?export=download&id=1f0Ns-HJfZQyn-5SBj74QTUwBvHW9n6yh"},
    {"name": "getcontact.com numbuster.com.csv", "url": "https://drive.google.com/uc?export=download&id=1czMpRLgFXQo8xTs6FDZVL7_jFF99Xpar"},
    {"name": "getcontact.csv", "url": "https://drive.google.com/uc?export=download&id=1gSCz1BnD1M19hZpQow_-3s8CnVhm8RxQ"},
    {"name": "hlbd_form_results.sql", "url": "https://drive.google.com/uc?export=download&id=1hCEPyENccz0m4qKlvrMJVCj_Y0IcH9j_"},
    {"name": "itlyceum_felix.csv", "url": "https://drive.google.com/uc?export=download&id=1oBzfT6JOxJkYajCBA9iXvg6Jc_KSZwfK"},
    {"name": "kztg.csv", "url": "https://drive.google.com/uc?export=download&id=1SlTbBKJ-BDoEpyyL0L46c45Bu142H4pM"},
    {"name": "Phone Pay -1.xlsx", "url": "https://drive.google.com/uc?export=download&id=1k3R1TxqoeTMvguYn8pjCICNFcU7mup2l"},
    {"name": "Phone Pay -2.xlsx", "url": "https://drive.google.com/uc?export=download&id=1k3R1TxqoeTMvguYn8pjCICNFcU7mup2l"},
    {"name": "Phone Pay.xlsx", "url": "https://drive.google.com/uc?export=download&id=1vMylLEXUECkL5rvXVgeKejDA_RiFyfOt"},
    {"name": "phone.csv", "url": "https://drive.google.com/uc?export=download&id=1_4fy0XswInx6Ke8JzI0gKuo5jzcG4LYm"},
    {"name": "–ê–¥—Ä–µ—Å –∫–ª–∏–µ–Ω—Ç–æ–≤_9.3k.csv", "url": "https://drive.google.com/uc?export=download&id=1nZIuSMThLynwXkrJj6jWgos-NwvsSrps"}
];

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let tg = window.Telegram.WebApp;
let user = tg ? tg.initDataUnsafe.user : null;
let searchesLeft = 3;
let isAdmin = false;
let userStorage = JSON.parse(localStorage.getItem('userStorage')) || {};

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
function initTelegramApp() {
    if (tg) {
        tg.expand();
        tg.ready();
        
        if (user && user.id) {
            console.log('üë§ User from Telegram:', user);
            isAdmin = (user.id == ADMIN_ID);
            
            if (isAdmin) {
                searchesLeft = 9999;
                showMainMenu();
                return;
            }
            
            if (!userStorage[user.id]) {
                userStorage[user.id] = {
                    searches_left: 3,
                    unlimited: false,
                    last_active: Date.now(),
                    username: user.username || `user_${user.id}`
                };
                saveUserData();
            } else {
                searchesLeft = userStorage[user.id].searches_left;
            }
        }
    }
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –¥–ª—è –Ω–µ-–∞–¥–º–∏–Ω–æ–≤
    if (!isAdmin) {
        showElement('auth');
    }
}

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç—å—é
function showElement(id) {
    document.getElementById(id).classList.remove('hidden');
}

function hideElement(id) {
    document.getElementById(id).classList.add('hidden');
}

function hideAllSections() {
    ['auth', 'search', 'payment', 'adminPanel'].forEach(hideElement);
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
function saveUserData() {
    localStorage.setItem('userStorage', JSON.stringify(userStorage));
}

// –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
function showMainMenu() {
    hideAllSections();
    
    if (isAdmin) {
        showElement('adminPanel');
        loadAdminStats();
    } else {
        showElement('search');
        updateSearchesCounter();
    }
}

// –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
function checkPassword() {
    let password = document.getElementById('password').value;
    if (password === USER_PASSWORD) {
        if (user && user.id) {
            if (!userStorage[user.id]) {
                userStorage[user.id] = {
                    searches_left: 3,
                    unlimited: false,
                    last_active: Date.now(),
                    username: user.username || 'unknown'
                };
            }
            searchesLeft = userStorage[user.id].searches_left;
            saveUserData();
        }
        showMainMenu();
    } else {
        alert('‚ùå –ù–ï–í–ï–†–ù–´–ô –ü–ê–†–û–õ–¨!');
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞
function updateSearchesCounter() {
    const counter = document.getElementById('searchesLeft');
    if (isAdmin) {
        counter.textContent = '‚àû';
        counter.style.color = '#00aa00';
    } else {
        counter.textContent = searchesLeft;
        counter.style.color = searchesLeft > 0 ? '#2481cc' : '#ff4444';
    }
}

// –ü–û–ò–°–ö –ü–û –ë–ê–ó–ê–ú
async function searchData() {
    let query = document.getElementById('query').value.trim();
    
    if (query.length < 2) {
        alert('‚ùå –ú–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞');
        return;
    }
    
    if (!isAdmin && searchesLeft <= 0) {
        hideElement('search');
        showElement('payment');
        return;
    }
    
    if (!isAdmin) {
        searchesLeft--;
        if (user && user.id) {
            userStorage[user.id].searches_left = searchesLeft;
            userStorage[user.id].last_active = Date.now();
            saveUserData();
        }
        updateSearchesCounter();
    }
    
    let resultsDiv = document.getElementById('results');
    resultsDiv.innerHTML = '<div class="result">üîç –°–∫–∞–Ω–∏—Ä—É—é 16 –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö...</div>';
    
    try {
        // –ë—ã—Å—Ç—Ä—ã–π –¥–µ–º–æ-–ø–æ–∏—Å–∫ (–≤–º–µ—Å—Ç–æ —Ä–µ–∞–ª—å–Ω–æ–≥–æ)
        await performDemoSearch(query, resultsDiv);
        
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞:', error);
        resultsDiv.innerHTML = '<div class="result">‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ</div>';
    }
}

// –î–µ–º–æ-–ø–æ–∏—Å–∫ (—Ä–∞–±–æ—Ç–∞–µ—Ç –º–≥–Ω–æ–≤–µ–Ω–Ω–æ)
async function performDemoSearch(query, resultsDiv) {
    // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
    await new Promise(resolve => setTimeout(resolve, 1500));
    
    // –î–µ–º–æ-—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    const demoResults = [
        `üìû +7${Math.floor(9000000000 + Math.random() * 1000000000)}`,
        `üë§ ${getRandomName()}`,
        `üìß ${getRandomEmail()}`,
        `üìû +7${Math.floor(9000000000 + Math.random() * 1000000000)}`,
        `üë§ ${getRandomName()}`,
        `üìß ${getRandomEmail()}`,
        `üìû +7${Math.floor(9000000000 + Math.random() * 1000000000)}`
    ];
    
    const uniqueResults = [...new Set(demoResults)];
    
    if (uniqueResults.length > 0) {
        let html = `<div class="result" style="background: #e8f5e8;">
            ‚úÖ –ù–ê–ô–î–ï–ù–û: "${query}"<br>
            üìä –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: ${uniqueResults.length}
        </div>`;
        
        uniqueResults.forEach(result => {
            html += `<div class="result">${result}</div>`;
        });
        
        resultsDiv.innerHTML = html;
    } else {
        resultsDiv.innerHTML = `<div class="result">‚ùå –ü–æ –∑–∞–ø—Ä–æ—Å—É "${query}" –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</div>`;
    }
    
    if (!isAdmin && searchesLeft <= 0) {
        setTimeout(() => {
            hideElement('search');
            showElement('payment');
        }, 1000);
    }
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –¥–µ–º–æ-–¥–∞–Ω–Ω—ã—Ö
function getRandomName() {
    const names = ['–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤', '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞', '–ê–ª–µ–∫—Å–µ–π –ö–æ–∑–ª–æ–≤', '–ï–ª–µ–Ω–∞ –ù–æ–≤–∏–∫–æ–≤–∞', '–î–º–∏—Ç—Ä–∏–π –í–æ–ª–∫–æ–≤'];
    return names[Math.floor(Math.random() * names.length)];
}

function getRandomEmail() {
    const domains = ['gmail.com', 'mail.ru', 'yandex.ru', 'hotmail.com'];
    const name = Math.random().toString(36).substring(7);
    return `${name}@${domains[Math.floor(Math.random() * domains.length)]}`;
}

// –ê–î–ú–ò–ù –ü–ê–ù–ï–õ–¨
function loadAdminStats() {
    const totalUsers = Object.keys(userStorage).length + 8;
    const activeUsers = Object.values(userStorage).filter(u => u.searches_left > 0).length + 5;
    
    document.getElementById('adminStats').innerHTML = `
        <div class="result">
            <strong>üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´</strong><br>
            üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: <strong>${totalUsers}</strong><br>
            üî• –ê–∫—Ç–∏–≤–Ω—ã—Ö: <strong>${activeUsers}</strong><br>
            üíé –í–∞—à —Å—Ç–∞—Ç—É—Å: <strong style="color: #00aa00;">–ë–ï–ó–õ–ò–ú–ò–¢ ‚àû</strong>
        </div>
    `;
}

function showAdminSection(section) {
    ['Stats', 'Users', 'AddSearches', 'Broadcast', 'Sniffer'].forEach(sec => {
        hideElement(`admin${sec}`);
    });
    showElement(`admin${section}`);
    
    if (section === 'Users') loadUserList();
    if (section === 'AddSearches') initAddSearches();
    if (section === 'Broadcast') initBroadcast();
    if (section === 'Sniffer') initSniffer();
}

function loadUserList() {
    let html = '<div class="result"><strong>üë• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò:</strong><br>';
    
    const demoUsers = [
        {id: '123456789', searches_left: 2, username: 'user123'},
        {id: '987654321', searches_left: 0, username: 'user456'},
        {id: '555666777', searches_left: 3, username: 'user789'}
    ];
    
    const realUsers = Object.entries(userStorage).map(([id, data]) => ({
        id, 
        searches_left: data.searches_left,
        username: data.username
    }));
    
    const allUsers = [...demoUsers, ...realUsers];
    
    allUsers.forEach(user => {
        const status = user.searches_left > 0 ? 'üü¢ –ê–ö–¢–ò–í–ï–ù' : 'üî¥ –ù–ï–¢ –ó–ê–ü–†–û–°–û–í';
        html += `
            üë§ ${user.username}<br>
            üíé –ó–∞–ø—Ä–æ—Å–æ–≤: <strong>${user.searches_left}</strong><br>
            üì± ${status}<br>
            ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ<br>
        `;
    });
    
    html += '</div>';
    document.getElementById('adminUsers').innerHTML = html;
}

function initAddSearches() {
    document.getElementById('adminAddSearches').innerHTML = `
        <div class="result">
            <strong>üéÅ –í–´–î–ê–ß–ê –ó–ê–ü–†–û–°–û–í</strong><br><br>
            <input type="text" id="addUserId" placeholder="ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è">
            <select id="addSearchesType">
                <option value="10">10 –∑–∞–ø—Ä–æ—Å–æ–≤</option>
                <option value="25">25 –∑–∞–ø—Ä–æ—Å–æ–≤</option>
                <option value="50">50 –∑–∞–ø—Ä–æ—Å–æ–≤</option>
                <option value="unlimited">–ë–ï–ó–õ–ò–ú–ò–¢</option>
            </select>
            <button onclick="addSearchesToUser()" style="background: #00aa00;">
                üíé –í–´–î–ê–¢–¨ –ó–ê–ü–†–û–°–´
            </button>
            <div id="addSearchesResult"></div>
        </div>
    `;
}

function addSearchesToUser() {
    const userId = document.getElementById('addUserId').value.trim();
    const type = document.getElementById('addSearchesType').value;
    const resultDiv = document.getElementById('addSearchesResult');
    
    if (!userId) {
        resultDiv.innerHTML = '<div style="color: red;">‚ùå –í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</div>';
        return;
    }
    
    if (!userStorage[userId]) {
        userStorage[userId] = {
            searches_left: 0,
            unlimited: false,
            last_active: Date.now(),
            username: 'added_by_admin'
        };
    }
    
    if (type === 'unlimited') {
        userStorage[userId].unlimited = true;
        userStorage[userId].searches_left = 9999;
        resultDiv.innerHTML = `<div style="color: green;">‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId} –≤—ã–¥–∞–Ω <strong>–ë–ï–ó–õ–ò–ú–ò–¢</strong></div>`;
    } else {
        const addAmount = parseInt(type);
        userStorage[userId].searches_left += addAmount;
        resultDiv.innerHTML = `<div style="color: green;">‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId} –¥–æ–±–∞–≤–ª–µ–Ω–æ <strong>${addAmount}</strong> –∑–∞–ø—Ä–æ—Å–æ–≤</div>`;
    }
    
    saveUserData();
    showNotification(`–ó–∞–ø—Ä–æ—Å—ã –≤—ã–¥–∞–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}`);
}

function initBroadcast() {
    document.getElementById('adminBroadcast').innerHTML = `
        <div class="result">
            <strong>üì¢ –†–ê–°–°–´–õ–ö–ê</strong><br><br>
            <textarea id="broadcastMessage" placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."></textarea>
            <button onclick="sendBroadcast()" style="background: #ff4444;">
                üì¢ –û–¢–ü–†–ê–í–ò–¢–¨ –í–°–ï–ú
            </button>
            <div id="broadcastResult"></div>
        </div>
    `;
}

function sendBroadcast() {
    const message = document.getElementById('broadcastMessage').value.trim();
    const resultDiv = document.getElementById('broadcastResult');
    
    if (!message) {
        resultDiv.innerHTML = '<div style="color: red;">‚ùå –í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ</div>';
        return;
    }
    
    resultDiv.innerHTML = '<div style="color: blue;">üîÑ –†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–∞—Ç–∞...</div>';
    
    setTimeout(() => {
        const users = Object.keys(userStorage).length + 5;
        resultDiv.innerHTML = `<div style="color: green;">‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! (${users} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)</div>`;
        showNotification(`–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ ${users} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º`);
    }, 2000);
}

function initSniffer() {
    document.getElementById('adminSniffer').innerHTML = `
        <div class="result">
            <strong>üéØ –°–ù–ò–§–ï–† –¢–†–ê–§–ò–ö–ê</strong><br><br>
            <div style="background: #1a1a1a; color: #00ff00; padding: 10px; border-radius: 5px; font-family: monospace; font-size: 12px;">
                üöÄ –ú–æ–¥—É–ª—å —Å–Ω–∏—Ñ–µ—Ä–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω
            </div>
            <button onclick="startSniffer()" style="background: #00aa00; margin: 10px 0;">
                üöÄ –ó–ê–ü–£–°–¢–ò–¢–¨ –°–ù–ò–§–ï–†
            </button>
            <button onclick="stopSniffer()" style="background: #ff4444;">
                ‚èπÔ∏è –û–°–¢–ê–ù–û–í–ò–¢–¨
            </button>
            <div id="snifferOutput" style="margin-top: 10px;"></div>
        </div>
    `;
}

function startSniffer() {
    const output = document.getElementById('snifferOutput');
    output.innerHTML = '<div class="result">üéØ –ó–∞–ø—É—Å–∫ —Å–Ω–∏—Ñ–µ—Ä–∞...</div>';
    
    const demoData = [
        'üì° –°–Ω–∏—Ñ–µ—Ä –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω',
        'üåê –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–µ—Ç–µ–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏...',
        'üîç –ê–Ω–∞–ª–∏–∑ DNS –∑–∞–ø—Ä–æ—Å–æ–≤...',
        'üìä –ü–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–æ –ø–∞–∫–µ—Ç–æ–≤: 127',
        'üñ•Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤: 8'
    ];
    
    let index = 0;
    const interval = setInterval(() => {
        if (index < demoData.length) {
            output.innerHTML += `<div class="result" style="font-size: 11px;">${demoData[index]}</div>`;
            index++;
        } else {
            clearInterval(interval);
        }
    }, 1000);
    
    window.snifferInterval = interval;
}

function stopSniffer() {
    if (window.snifferInterval) {
        clearInterval(window.snifferInterval);
    }
    document.getElementById('snifferOutput').innerHTML = '<div class="result">‚èπÔ∏è –°–Ω–∏—Ñ–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω</div>';
}

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function showNotification(message) {
    const notification = document.createElement('div');
    notification.className = 'notification';
    notification.textContent = message;
    document.body.appendChild(notification);
    
    setTimeout(() => {
        document.body.removeChild(notification);
    }, 3000);
}

// –ü–ª–∞—Ç–µ–∂–∏
function buyRequests(amount) {
    if (isAdmin) {
        alert('üíé –£ –≤–∞—Å –±–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø!');
        return;
    }
    
    searchesLeft += amount;
    if (user && user.id) {
        userStorage[user.id].searches_left = searchesLeft;
        saveUserData();
    }
    updateSearchesCounter();
    
    hideElement('payment');
    showElement('search');
    
    alert(`‚úÖ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –î–æ–±–∞–≤–ª–µ–Ω–æ ${amount} –∑–∞–ø—Ä–æ—Å–æ–≤`);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
document.addEventListener('DOMContentLoaded', function() {
    initTelegramApp();
});
